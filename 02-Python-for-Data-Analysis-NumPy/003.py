import numpy as np

#operations
arr = np.arange(0,10)

arr + arr
# array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])

arr*arr
# array([ 0,  1,  4,  9, 16, 25, 36, 49, 64, 81])

arr-arr
# array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])

arr/arr
# array([ nan,   1.,   1.,   1.,   1.,   1.,   1.,   1.,   1.,   1.])

1/arr
# array([        inf,  1.        ,  0.5       ,  0.33333333,  0.25      ,
        # 0.2       ,  0.16666667,  0.14285714,  0.125     ,  0.11111111])

arr**3 
# array([  0,   1,   8,  27,  64, 125, 216, 343, 512, 729])
#power 3 of numbers

#Universal Array Functions  

np.sqrt(arr) #Taking Square Roots
# array([ 0.        ,  1.        ,  1.41421356,  1.73205081,  2.        ,
        # 2.23606798,  2.44948974,  2.64575131,  2.82842712,  3.        ])

np.exp(arr) #Calcualting exponential (e^)
# array([  1.00000000e+00,   2.71828183e+00,   7.38905610e+00,
#          2.00855369e+01,   5.45981500e+01,   1.48413159e+02,
#          4.03428793e+02,   1.09663316e+03,   2.98095799e+03,
#          8.10308393e+03])

np.max(arr) #same as arr.max()

np.sin(arr)
# array([ 0.        ,  0.84147098,  0.90929743,  0.14112001, -0.7568025 ,
    #    -0.95892427, -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849])\

np.log(arr)
# array([       -inf,  0.        ,  0.69314718,  1.09861229,  1.38629436,
        # 1.60943791,  1.79175947,  1.94591015,  2.07944154,  2.19722458])